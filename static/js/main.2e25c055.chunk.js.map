{"version":3,"sources":["components/counter/Statistics/Statistics.js","components/counter/feedButton/FeedButton.js","components/counter/NotificationErros.js","components/counter/Section.js","components/App.js","index.js"],"names":["Statistics","state","getTotal","percentage","good","neutral","bad","FeedButton","handleIncrement","name","type","onClick","NotificationError","message","Section","event","increment","props","step","target","setState","result","Math","floor","className","this","title","Component","defaultProps","App","ReactDOM","render","document","getElementById"],"mappings":"sLAeeA,EAbI,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WAC7BC,EAAuBH,EAAvBG,KAAMC,EAAiBJ,EAAjBI,QAASC,EAAQL,EAARK,IAEvB,OACE,oCACE,oCAAUF,GACV,uCAAaC,GACb,mCAASC,GACT,8CAAoBJ,KACpB,iDAAuBC,IAAvB,OCMSI,EAhBI,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,gBACrB,OACI,oCACA,4BAAQC,KAAK,OAAOC,KAAK,SAASC,QAASH,GAA3C,QAGF,4BAAQC,KAAK,UAAUC,KAAK,SAASC,QAASH,GAA9C,WAGA,4BAAQC,KAAK,MAAMC,KAAK,SAASC,QAASH,GAA1C,SCEaI,EARU,SAAC,GAAa,IAAZC,EAAW,EAAXA,QACvB,OACI,oCACA,2BAAIA,KCHSC,E,2MAInBb,MAAQ,CACNG,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPE,gBAAkB,SAAAO,GAChB,IAAMC,EAAY,EAAKC,MAAMC,KACvBT,EAAOM,EAAMI,OAAOV,KAC1B,EAAKW,SAAL,eACGX,EAAO,EAAKR,MAAMQ,GAAQO,K,EAI/Bd,SAAW,WAAO,IAAD,EACgB,EAAKD,MAA5BG,EADO,EACPA,KAAME,EADC,EACDA,IAEd,OADaF,EAFE,EACIC,QACWC,G,EAGhCH,WAAa,WACX,IAAIkB,EAAS,EAAKnB,WAClB,OAAOoB,KAAKC,MAAO,IAAMF,EAAU,EAAKpB,MAAMG,O,wEAI9C,OACE,oCACE,6BAASoB,UAAWC,KAAKR,MAAMS,MAAM,IACnC,kBAAC,EAAD,CAAYlB,gBAAiBiB,KAAKjB,mBAEf,IAApBiB,KAAKvB,WACJ,6BAASsB,UAAWC,KAAKR,MAAMS,MAAM,IACnC,kBAAC,EAAD,CACEzB,MAAOwB,KAAKxB,MACZC,SAAUuB,KAAKvB,SACfC,WAAYsB,KAAKtB,cAIrB,kBAAC,EAAD,CAAmBU,QAAQ,2B,GA1CAc,aAAhBb,EACZc,aAAe,CACpBV,KAAM,GCHV,IAMeW,EANH,kBACV,oCACE,kBAAC,EAAD,CAASH,MAAO,CAAC,UAAW,kBCFhCI,IAASC,OAAO,kBAAC,EAAD,MAAOC,SAASC,eAAe,U","file":"static/js/main.2e25c055.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Statistics = ({ state, getTotal, percentage }) => {\r\n  const { good, neutral, bad } = state;\r\n\r\n  return (\r\n    <>\r\n      <p>Good :{good}</p>\r\n      <p>Neutral :{neutral}</p>\r\n      <p>Bad :{bad}</p>\r\n      <p>Total feedback :{getTotal()}</p>\r\n      <p>Positive feedback :{percentage()}%</p>\r\n    </>\r\n  );\r\n};\r\nexport default Statistics;\r\n","import React from 'react'\r\nconst FeedButton = ({handleIncrement} ) => {\r\nreturn (\r\n    <>\r\n    <button name=\"good\" type=\"button\" onClick={handleIncrement}>\r\n    Good\r\n  </button>\r\n  <button name=\"neutral\" type=\"button\" onClick={handleIncrement}>\r\n    Neutral\r\n  </button>\r\n  <button name=\"bad\" type=\"button\" onClick={handleIncrement}>\r\n    Bad\r\n  </button>\r\n</>\r\n)\r\n\r\n}\r\nexport default FeedButton","import React from 'react'\r\n\r\n\r\n\r\nconst NotificationError =({message})=>{\r\n    return (\r\n        <>\r\n        <p>{message}</p>\r\n        </>\r\n    )\r\n\r\n}\r\nexport default NotificationError;","import React, { Component } from \"react\";\r\nimport Statistics from \"./Statistics/Statistics\";\r\nimport FeedButton from \"./feedButton/FeedButton\";\r\nimport NotificationError from \"./NotificationErros\";\r\nexport default class Section extends Component {\r\n  static defaultProps = {\r\n    step: 1\r\n  };\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0\r\n  };\r\n  handleIncrement = event => {\r\n    const increment = this.props.step;\r\n    const name = event.target.name;\r\n    this.setState({\r\n      [name]: this.state[name] + increment\r\n    });\r\n  };\r\n\r\n  getTotal = () => {\r\n    const { good, bad, neutral } = this.state;\r\n    let result = good + neutral + bad;\r\n    return result;\r\n  };\r\n  percentage = () => {\r\n    let result = this.getTotal();\r\n    return Math.floor((100 / result) * this.state.good);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <section className={this.props.title[0]}>\r\n          <FeedButton handleIncrement={this.handleIncrement} />\r\n        </section>\r\n        {this.getTotal() !== 0 ? (\r\n          <section className={this.props.title[1]}>\r\n            <Statistics\r\n              state={this.state}\r\n              getTotal={this.getTotal}\r\n              percentage={this.percentage}\r\n            />\r\n          </section>\r\n        ) : (\r\n          <NotificationError message=\"No feedback given\" />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Section from \"./counter/Section\";\r\n\r\nconst App = () => (\r\n  <>\r\n    <Section title={[\"buttons\", \"statistics\"]} />\r\n  </>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nReactDOM.render(<App/>,document.getElementById('root'));\r\n"],"sourceRoot":""}